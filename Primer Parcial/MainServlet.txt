package com.emergentes;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Set;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

@WebServlet(name = "MainServlet", urlPatterns = {"/MainServlet"})
public class MainServlet extends HttpServlet {
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        String op = request.getParameter("op");
        actividades objac = new actividades();
        int id, pos;
        
        HttpSession ses = request.getSession();
        ArrayList<actividades> lista = (ArrayList<actividades>)ses.getAttribute("listaact");
        
        switch(op){
                case "nuevo":
                //enviar un objeto vacio para editar
                request.setAttribute("miobjetoact",objac);
                request.getRequestDispatcher("editar.jsp").forward(request, response);
                break;
                case "editar":
                    //enviar un objeto a editar pero con contenido
                    id = Integer.parseInt(request.getParameter("id"));
                    //averiguar la posion del elemento en la lista 
                    pos = buscarPorIndice(request, id);
                    //obtener los datos 
                    objac = lista.get(pos);
                    request.setAttribute("miobjetoact",objac);
                request.getRequestDispatcher("editar.jsp").forward(request, response);            
                break;
                case "eliminar":
                    //eliminar el registro de la coleccion segun el id 
                    id = Integer.parseInt(request.getParameter("id"));
                    pos = buscarPorIndice(request, id);
                    if (pos >= 0){
                    lista.remove(pos);
                    }
                    request.setAttribute("listaact", lista);
                    response.sendRedirect("index.jsp");
                break; 
                default:
            }
    }
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
       int id = Integer.parseInt(request.getParameter("id"));
       HttpSession ses = request.getSession();
       ArrayList<actividades> lista = (ArrayList<actividades>)ses.getAttribute("listaact");
       actividades objact = new actividades();
       objact.setId(id);
       objact.setDescripcion(request.getParameter("descripcion"));
       objact.setCantidad(Integer.parseInt(request.getParameter("cantidad")));
       objact.setPrecio(Double.parseDouble(request.getParameter("precio")));
       objact.setCategoria(request.getParameter("categoria"));
       if (id==0){
       //nuevo registro
       int idNuevo = obtenerId(request);
       objact.setId(idNuevo);
       lista.add(objact);
       
       }
       else{
       //edicion de registro
       int pos = buscarPorIndice(request, id);
       lista.set(pos, objact);
       }
       request.setAttribute("listaact",lista);
       response.sendRedirect("index.jsp");
    }
    public int buscarPorIndice(HttpServletRequest request, int id){
    HttpSession ses = request.getSession();
    ArrayList<actividades> lista = (ArrayList<actividades>) ses.getAttribute("listaact");
    
    int pos = -1;
    
    if (lista !=null){
        for (actividades ele : lista){
        ++pos;
        if (ele.getId()==id){
        break;
        }
    }
} 
    return pos;
  }
    public int obtenerId(HttpServletRequest request){
        HttpSession ses = request.getSession();
        ArrayList<actividades> lista = (ArrayList<actividades>) ses.getAttribute("listaact");
        int idn = 0;
        for (actividades ele : lista ){
        idn = ele.getId();
        }
        return idn +1;
    }
}